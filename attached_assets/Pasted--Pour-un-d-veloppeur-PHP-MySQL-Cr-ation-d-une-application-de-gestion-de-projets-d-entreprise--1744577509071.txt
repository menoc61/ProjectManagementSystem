üéØ Pour un d√©veloppeur PHP/MySQL : Cr√©ation d‚Äôune application de gestion de projets d‚Äôentreprise

üìå Contexte :
Concevoir une application web compl√®te en PHP natif avec MySQL (sans framework) pour g√©rer les projets d‚Äôune entreprise. L'application doit √™tre responsive, s√©curis√©e, avec une interface utilisateur claire et intuitive. Elle doit permettre la gestion des clients, projets, types de projets, t√¢ches, personnel, services, affectations et r√®glements, conform√©ment au mod√®le conceptuel de donn√©es fourni (ERD ci-joint).

‚úÖ Modules √† d√©velopper :
Authentification (admin + utilisateurs autoris√©s)


Connexion s√©curis√©e (hashage des mots de passe)


Gestion des sessions et r√¥les (si n√©cessaire)


Module CLIENT


CRUD complet


Recherche dynamique


Affichage des projets li√©s √† un client


Export CSV/PDF


Impression fiche client


Module TYPE DE PROJET


Gestion des types de projet et leurs forfaits


Li√© aux projets


Module PROJET


CRUD complet


Association √† un client et un type


Suivi de co√ªt, √©tat, p√©riode


Statistiques : projets en cours, termin√©s, co√ªt total par client ou p√©riode


Export PDF/CSV, impression


Module T√ÇCHE


Cr√©ation et suivi des t√¢ches li√©es √† un projet


√âtats des t√¢ches


Dates importantes (d√©but, fin, enregistrement)


Historique des modifications


Module R√àGLEMENT


Saisie des r√®glements par client


Montant, date, heure


Statistiques de paiement


Historique financier client


Export des r√®glements


Module SERVICE


CRUD complet


Associ√© au personnel


Module PERSONNEL


Ajout, modification, suppression


Association √† un service


Affichage des affectations par personnel


Export des listes, impression


Module AFFECTATION


Attribution des t√¢ches au personnel


Date, heure, fonction de l‚Äôaffectation


Historique et suivi


Statistiques : charge par employ√©, par t√¢che



üìä Fonctionnalit√©s suppl√©mentaires :
Dashboard statistiques :


Nombre de projets par type


Clients les plus actifs


Taux d'ach√®vement des projets


Personnel le plus sollicit√©


Montants r√©gl√©s vs dus par client


Export de donn√©es :


Tous les modules doivent permettre l‚Äôexport CSV et PDF


G√©n√©ration automatique de documents PDF avec les d√©tails du projet, des t√¢ches, ou des r√®glements


Impression directe des fiches √† partir de l‚Äôinterface (utilisation de CSS imprimable)


Recherches & filtres dynamiques :


Recherche par mot-cl√© dans tous les modules


Filtres par date, √©tat, client, personnel, etc.


S√©curit√© :


Validation c√¥t√© serveur


Protection CSRF et XSS


√âchappement des requ√™tes SQL via PDO avec requ√™tes pr√©par√©es


Organisation du code :


Architecture MVC simplifi√©e (dossiers : /models, /controllers, /views, /public)


Fichier config.php pour la base de donn√©es


Utilisation de biblioth√®ques open-source pour :


PDF : TCPDF ou FPDF


CSV : fputcsv()


Tableaux dynamiques : DataTables.js


UI : Bootstrap ou Tailwind CSS (au choix)



üóÇÔ∏è Base de donn√©es :
La base de donn√©es doit √™tre con√ßue selon l'ERD suivant, avec toutes les cl√©s primaires et √©trang√®res respect√©es :
CLIENT(IdClient, NomClient, AdresseClient, EmailClient, TelClient)


TYPEPROJET(IdTypeProjet, LibelleTypeProjet, ForfaitCoutTypeProjet)


PROJET(IdProjet, TitreProjet, DescriptionProjet, CoutProjet, DateDebutProjet, DateFinProjet, EtatProjet, IdClient, IdTypeProjet)


TACHE(IdTache, LibelleTache, DateEnregTache, DateDebutTache, DateFinTache, EtatTache, IdProjet)


REGLEMENT(IdReglement, DateReglement, HeureReglement, MontantReglement, IdClient)


SERVICE(CodeService, LibelleService)


PERSONNEL(MatriculePersonnel, NomPersonnel, PrenomPersonnel, EmailPersonnel, TelPersonnel, CodeService)


AFFECTATION(IdAffectation, DateAffectation, HeureAffectation, FonctionAffectation, MatriculePersonnel, IdTache)



üß© Outils conseill√©s :
Visual Studio Code / Sublime Text


XAMPP / MAMP pour l‚Äôenvironnement local


phpMyAdmin pour la base de donn√©es


Git pour le suivi du projet


‚úÖ Script SQL - Cr√©ation de la base de donn√©es

CREATE DATABASE IF NOT EXISTS GestionProjetsEntreprise;
USE GestionProjetsEntreprise;

-- TABLE CLIENT
CREATE TABLE CLIENT (
    IdClient INT AUTO_INCREMENT PRIMARY KEY,
    NomClient VARCHAR(100),
    AdresseClient VARCHAR(255),
    EmailClient VARCHAR(100),
    TelClient VARCHAR(20)
);

-- TABLE TYPEPROJET
CREATE TABLE TYPEPROJET (
    IdTypeProjet INT AUTO_INCREMENT PRIMARY KEY,
    LibelleTypeProjet VARCHAR(100),
    ForfaitCoutTypeProjet INT
);

-- TABLE PROJET
CREATE TABLE PROJET (
    IdProjet INT AUTO_INCREMENT PRIMARY KEY,
    TitreProjet VARCHAR(150),
    DescriptionProjet TEXT,
    CoutProjet INT,
    DateDebutProjet DATE,
    DateFinProjet DATE,
    EtatProjet INT,
    IdClient INT,
    IdTypeProjet INT,
    FOREIGN KEY (IdClient) REFERENCES CLIENT(IdClient),
    FOREIGN KEY (IdTypeProjet) REFERENCES TYPEPROJET(IdTypeProjet)
);

-- TABLE TACHE
CREATE TABLE TACHE (
    IdTache INT AUTO_INCREMENT PRIMARY KEY,
    LibelleTache VARCHAR(150),
    DateEnregTache DATE,
    DateDebutTache DATE,
    DateFinTache DATE,
    EtatTache INT,
    IdProjet INT,
    FOREIGN KEY (IdProjet) REFERENCES PROJET(IdProjet)
);

-- TABLE REGLEMENT
CREATE TABLE REGLEMENT (
    IdReglement INT AUTO_INCREMENT PRIMARY KEY,
    DateReglement DATE,
    HeureReglement TIME,
    MontantReglement INT,
    IdClient INT,
    FOREIGN KEY (IdClient) REFERENCES CLIENT(IdClient)
);

-- TABLE SERVICE
CREATE TABLE SERVICE (
    CodeService VARCHAR(20) PRIMARY KEY,
    LibelleService VARCHAR(100)
);

-- TABLE PERSONNEL
CREATE TABLE PERSONNEL (
    MatriculePersonnel VARCHAR(20) PRIMARY KEY,
    NomPersonnel VARCHAR(100),
    PrenomPersonnel VARCHAR(100),
    EmailPersonnel VARCHAR(100),
    TelPersonnel VARCHAR(20),
    CodeService VARCHAR(20),
    FOREIGN KEY (CodeService) REFERENCES SERVICE(CodeService)
);

-- TABLE AFFECTATION
CREATE TABLE AFFECTATION (
    IdAffectation INT AUTO_INCREMENT PRIMARY KEY,
    DateAffectation DATE,
    HeureAffectation TIME,
    FonctionAffectation VARCHAR(100),
    MatriculePersonnel VARCHAR(20),
    IdTache INT,
    FOREIGN KEY (MatriculePersonnel) REFERENCES PERSONNEL(MatriculePersonnel),
    FOREIGN KEY (IdTache) REFERENCES TACHE(IdTache)
);



pour plus d‚Äôinformation sur la structure de la base de donne veiller consulter ‚ûïDBDIAGRAM
